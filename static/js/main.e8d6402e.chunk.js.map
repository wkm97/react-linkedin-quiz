{"version":3,"sources":["components/Challenge/ChallengeComponent.tsx","components/Homepage/LinkedInAssessment.tsx","components/Homepage/questionnaire.svg","components/Homepage/Homepage.tsx","components/Challenge/MarkdownCustom.tsx","components/Example/Example.tsx","components/Practice/Practice.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChallengeStatus","AssessmentCard","props","title","assessmentInfo","replace","url","to","btoa","className","LinkedInAssessment","useState","assessmentInfos","setAssessmentInfo","filterBy","setFilterBy","useEffect","githubLinkedinSource","getAssessmentInfos","then","item","id","type","name","placeholder","onChange","e","target","value","handleSearchBarChange","filter","toLowerCase","includes","map","idx","Homepage","history","useHistory","urlSubmit","setUrlSubmit","src","QuestionnaireLogo","alt","onClick","push","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","components","code","inline","children","match","exec","style","dracula","language","PreTag","String","MarkdownCustom","content","ExplainCard","explain","expand","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","SingleChoice","challenge","status","selected","setSelected","choices","getChoices","getFieldClassname","IDLE","getAnswers","WRONG","Fragment","initialValues","onSubmit","values","onSelectedChange","parseInt","setValues","role","aria-labelledby","choice","idxString","checked","CORRECT","Question","displayQuestion","index","question","ChallengeComponent","setStatus","getExplanation","undefined","getQuestion","getIndex","Example","quiz","setQuiz","fetch","response","text","MdFileProcessor","getQuiz","console","log","getChallenges","Practice","encodedUrl","useParams","atob","practice","setPractice","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8d6402e.chunk.js","sourcesContent":["import { Challenge } from \"quiz-too\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport MarkdownCustom from \"./MarkdownCustom\";\nimport { Transition } from \"@tailwindui/react\";\n\ninterface challengeProps {\n  challenge: Challenge;\n}\n\nenum ChallengeStatus {\n  IDLE,\n  CORRECT,\n  WRONG,\n}\n\nconst ChallengeComponent = (props: challengeProps): JSX.Element => {\n  const { challenge } = props;\n  const [status, setStatus] = useState(ChallengeStatus.IDLE);\n  const [selected, setSelected] = useState<number[]>();\n  const explain = challenge.getExplanation();\n\n  useEffect(() => {\n    if (selected !== undefined && challenge.getAnswers().includes(selected[0])) {\n      setStatus(ChallengeStatus.CORRECT);\n    } else if (selected !== undefined) {\n      setStatus(ChallengeStatus.WRONG);\n    } else if (selected === undefined) {\n      setStatus(ChallengeStatus.IDLE);\n    }\n  }, [selected, challenge]);\n\n  return (\n    <div className=\"block p-2 text-xs mx-10 my-4 md:text-base border rounded-lg shadow dark:bg-gray-800\">\n      <Question question={challenge.getQuestion()} index={challenge.getIndex()} />\n      <SingleChoice challenge={challenge} status={status} onSelectedChange={(value) => setSelected(value)} />\n      {explain ? <ExplainCard explain={explain} expand={status !== ChallengeStatus.IDLE ? true : false} /> : null}\n      {/* <button className=\"mt-2 p-2\" onClick={()=>setSelected(undefined)}>REFRESH</button> */}\n    </div>\n  );\n};\n\nconst ExplainCard = (props: { explain: string; expand: boolean }) => {\n  const { explain, expand } = props;\n\n  const getClassname = () => {\n    if (expand) {\n      return \"block\";\n    } else {\n      return \"overflow-hidden hidden\";\n    }\n  };\n\n  return (\n    <Transition\n      show={expand}\n      enter=\"transition ease-out duration-500 transform\"\n      enterFrom=\"opacity-0 scale-95\"\n      enterTo=\"opacity-100 scale-100\"\n      leave=\"transition ease-in duration-75 transform\"\n      leaveFrom=\"opacity-100 scale-100\"\n      leaveTo=\"opacity-0 scale-95\"\n    >\n      <div className={`border-t-2 p-4 mt-4 select-text ${getClassname()}`}>\n        <p className=\"break-words text-gray-700 dark:text-gray-50 text-opacity-80\">{explain}</p>\n      </div>\n    </Transition>\n  );\n};\n\ninterface singleChoiceProps {\n  challenge: Challenge;\n  status: ChallengeStatus;\n  onSelectedChange: (selected: number[]) => void;\n}\n\nconst SingleChoice = (props: singleChoiceProps) => {\n  const { challenge, status } = props;\n  const [selected, setSelected] = useState<number>(-9);\n  const choices = challenge.getChoices();\n\n  // useEffect(()=>{\n  //     if(selected === undefined){\n  //         status = ChallengeStatus.IDLE;\n  //     }\n  // },[selected])\n\n  const getFieldClassname = (idx: number): string => {\n    if (status !== ChallengeStatus.IDLE && challenge.getAnswers().includes(idx)) {\n      return \"bg-gradient-to-r from-green-500 pointer-events-none\";\n    } else if (status === ChallengeStatus.WRONG && idx === selected) {\n      return \"bg-gradient-to-r from-red-500 pointer-events-none\";\n    } else if (status !== ChallengeStatus.IDLE) {\n      return \"pointer-events-none\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const getButtonClassname = () => {\n    if (status === ChallengeStatus.CORRECT) {\n      return \"bg-green-400 pointer-events-none\";\n    } else if (status === ChallengeStatus.WRONG) {\n      return \"bg-red-400 pointer-events-none\";\n    } else {\n      return \"bg-primary-400\";\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          selected: \"\",\n        }}\n        onSubmit={(values) => {\n          props.onSelectedChange([parseInt(values.selected)]);\n          setSelected(parseInt(values.selected));\n        }}\n      >\n        {({ values, setValues }) => (\n          <Form>\n            <div className=\"flex-col my-5\" role=\"group\" aria-labelledby=\"single-choices-group\">\n              {choices.map((choice, idx) => {\n                const idxString = String(idx);\n\n                return (\n                  <div className={`flex items-center p-2 rounded-l-lg ${getFieldClassname(idx)}`} key={idx}>\n                    <Field\n                      type=\"radio\"\n                      name=\"selected\"\n                      checked={idxString === values.selected ? true : false}\n                      value={idxString}\n                    />\n\n                    <span\n                      className=\"w-11/12 mx-2 overflow-x-auto text-gray-800 dark:text-gray-100\"\n                      onClick={() => {\n                        if (status === ChallengeStatus.IDLE) {\n                          setValues({ selected: String(idx) });\n                        }\n                      }}\n                    >\n                      <MarkdownCustom content={choice} />\n                    </span>\n                    {/* <Field component={RadioContent} valueName=\"selected\" value={String(idx)} content={choice} selected={values.selected}/> */}\n                  </div>\n                );\n              })}\n            </div>\n            <button\n              className={`block p-2 font-bold uppercase transition duration-200 ease-in-out ${getButtonClassname()} text-gray-100 rounded-lg m-1 transform hover:-translate-y-1 hover:scale-110 hover:bg-primary-600 focus:outline-none`}\n              type=\"submit\"\n            >\n              Check\n            </button>\n          </Form>\n        )}\n      </Formik>\n      {/* <button onClick={()=>setSelected(undefined)}>REFRESH</button> */}\n    </React.Fragment>\n  );\n};\n\n// interface radioContentProps {\n//     valueName:string,\n//     value:string,\n//     content:string\n//     selected:string\n// }\n\n// const RadioContent = (props:radioContentProps) => {\n\n//     const {valueName, value, content, selected} = props;\n\n//     const [field, , helpers] = useField({ name: valueName, type: \"radio\", value: value });\n\n//     const { setValue } = helpers;\n\n//     return (\n//         <React.Fragment>\n//             <input {...field} checked={value === selected} type=\"radio\"></input>\n//             <span className=\"ml-3 w-full\" onClick={()=>{setValue(value)}}><MarkdownCustom content={content}/></span>\n//         </React.Fragment>\n//     );\n// };\n\nconst Question = (props: { question: string; index: number }) => {\n  const displayQuestion = \"Q\" + props.index + \". \" + props.question;\n\n  return (\n    <div className=\"border-primary-400 border-b-2 p-2 pb-4 overflow-x-auto\">\n      <MarkdownCustom content={displayQuestion} />\n    </div>\n  );\n};\n\nexport default ChallengeComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { githubLinkedinSource } from \"quiz-too\";\nimport { Link } from \"react-router-dom\";\n\ninterface AssessmentInfo {\n  title: string;\n  url: string;\n  questionCount: number;\n}\n\nconst LinkedInAssessment = (props: { className?: string }): JSX.Element => {\n  const [assessmentInfos, setAssessmentInfo] = useState<AssessmentInfo[]>();\n  const [filterBy, setFilterBy] = useState<string>();\n\n  useEffect(() => {\n    githubLinkedinSource.getAssessmentInfos().then((item) => {\n      setAssessmentInfo(item);\n    });\n  }, []);\n\n  const handleSearchBarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterBy(e.target.value);\n  };\n\n  const getDisplayAssessment = () => {\n    return assessmentInfos?.filter((item) => item.title.toLowerCase().includes(filterBy || \"\"));\n  };\n\n  return (\n    <div className={`flex flex-col justify-center ${props.className}`}>\n      <div\n        id=\"searchbar-for-linkedin\"\n        className=\"w-full h-10 pl-3 pr-2 bg-gray-50 dark:bg-gray-800 border-2 rounded-full flex justify-between items-center relative\"\n      >\n        <input\n          type=\"search\"\n          name=\"filter-assessment\"\n          id=\"filter-assessment\"\n          placeholder=\"Filter LinkedIn Assessment\"\n          className=\"bg-gray-50 dark:bg-gray-800 w-full outline-none focus:outline-none active:outline-none\"\n          onChange={(e) => handleSearchBarChange(e)}\n        />\n      </div>\n\n      <div id=\"linkedin-assessment-lists\" className=\"mt-4\">\n        {getDisplayAssessment()?.map((item, idx) => {\n          return <AssessmentCard key={idx} assessmentInfo={item} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst AssessmentCard = (props: { assessmentInfo: AssessmentInfo }): JSX.Element => {\n  const title = props.assessmentInfo.title.replace(/\\[|\\]/g, \"\");\n  const url = props.assessmentInfo.url;\n\n  // const handleClickCard = () => {\n  //   console.log(url);\n  //   hashHistory\n  // }\n\n  return (\n    <Link to={`/practice/${btoa(url)}`}>\n      <div className=\"p-2 m-1 bg-secondary-500 dark:bg-gray-800 font-bold text-gray-100 rounded-sm shadow text-sm flex justify-between\">\n        <span>{title}</span>\n        {/* <span className=\"text-gray-300\">{questionCount}</span> */}\n      </div>\n    </Link>\n  );\n};\nexport default LinkedInAssessment;\n","export default __webpack_public_path__ + \"static/media/questionnaire.da1f0384.svg\";","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport LinkedInAssessment from \"./LinkedInAssessment\";\nimport QuestionnaireLogo from \"./questionnaire.svg\";\n\nconst Homepage = (): JSX.Element => {\n  const history = useHistory();\n  const [urlSubmit, setUrlSubmit] = useState<string>();\n\n  const handleMdUrlSubmit = () => {\n    history.push(`/practice/${btoa(urlSubmit || \"\")}`)\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-between md:px-20\">\n        <button className=\"m-2 p-2 text-lg uppercase font-bold focus:outline-none\">\n          <span className=\"text-primary-500\">MD2</span>Practice\n        </button>\n        <div className=\"m-2 p-2 text-md\">\n          <button></button> Dark Theme\n        </div>\n      </div>\n\n      <section>\n        <div className=\"flex justify-around px-10\">\n          <div className=\"flex flex-col w-1/2 justify-center justify-items-center text-center\">\n            <span className=\"text-md md:text-lg font-bold\">Simple Practice Test Engine</span>\n            <span className=\"text-xs md:text-lg fond-semibold text-gray-400\">\n              Convert MD File to Q&amp;A for Practice\n            </span>\n          </div>\n          <div className=\"flex justify-center justify-items-center text-center\">\n            <img className=\"w-full h-full\" src={QuestionnaireLogo} alt=\"questionnaire-logo\" />\n          </div>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"flex flex-col mx-10 my-20 justify-center justify-items-center\">\n          <div className=\"w-full h-10 pl-3 pr-2 bg-gray-50 dark:bg-gray-800 border-2 rounded-full flex justify-between items-center relative\">\n            <input\n              onChange={(e)=>setUrlSubmit(e.target.value)}\n              type=\"search\"\n              name=\"md-url\"\n              id=\"md-url-submit\"\n              placeholder=\"URL for MD File\"\n              className=\"bg-gray-50 dark:bg-gray-800 w-full outline-none focus:outline-none active:outline-none\"\n            />\n            <button onClick={handleMdUrlSubmit} type=\"submit\" className=\"ml-1 outline-none focus:outline-none active:outline-none\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          <div className=\"text-lg uppercase text-center my-2\">OR</div>\n          <div className=\"border border-b-2 shadow-md border-primary-700\"></div>\n          <div className=\"mt-4 font-bold flex justify-center\">\n            <span>LinkedIn Assessment Practice</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"animate-bounce ml-2 h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <LinkedInAssessment className=\"mt-4\" />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n/* Use `…/dist/cjs/…` if you’re not in ESM! */\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst components = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  code({ inline, className, children, ...props }: any) {\n    const match = /language-(\\w+)/.exec(className || \"\");\n    return !inline && match ? (\n      <SyntaxHighlighter\n        className={`${className} pointer-events-auto`}\n        style={dracula}\n        language={match[1]}\n        PreTag=\"div\"\n        children={String(children).replace(/\\n$/, \"\")}\n        {...props}\n      />\n    ) : (\n      <code className={`${className}`} children={children} {...props} />\n    );\n  },\n};\n\ninterface Props {\n  content: string;\n}\n\nconst MarkdownCustom = (props: Props): JSX.Element => {\n  return <ReactMarkdown components={components} children={props.content} />;\n};\n\nexport default MarkdownCustom;\n","import { MdFileProcessor, Quiz } from \"quiz-too\";\nimport { useEffect, useState } from \"react\";\nimport ChallengeComponent from \"../Challenge/ChallengeComponent\";\n\nconst Example = (): JSX.Element => {\n  const [quiz, setQuiz] = useState<Quiz>();\n\n  useEffect(() => {\n    fetch(\"https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/css/css-quiz.md\")\n      .then((response) => response.text())\n      .then((content) => {\n        const mdFileProcessor = new MdFileProcessor(content);\n        const quiz = mdFileProcessor.getQuiz();\n        console.log(quiz);\n        setQuiz(quiz);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex-col justify-items-center pt-10 font-mono select-none bg-gray-100 dark:bg-gray-900 dark:text-gray-100\">\n      {quiz\n        ? quiz.getChallenges().map((item, idx) => {\n            return <ChallengeComponent key={idx} challenge={item} />;\n          })\n        : null}\n      {/* {quiz? <ChallengeComponent challenge={quiz.getChallenges()[8]} />: null}\n      {quiz? <ChallengeComponent challenge={quiz.getChallenges()[9]} />: null} */}\n    </div>\n  );\n};\n\nexport default Example;\n","import { MdFileProcessor, Quiz } from \"quiz-too\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport ChallengeComponent from \"../Challenge/ChallengeComponent\";\n\nconst Practice = (): JSX.Element => {\n  const { encodedUrl } = useParams<{ encodedUrl: string }>();\n  const url = atob(encodedUrl);\n  console.log(url)\n  const [practice, setPractice] = useState<Quiz>();\n\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.text())\n      .then((content) => {\n        const mdFileProcessor = new MdFileProcessor(content);\n        const practice = mdFileProcessor.getQuiz();\n        setPractice(practice);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex-col justify-items-center pt-10 font-mono select-none dark:text-gray-100\">\n      {practice\n        ? practice.getChallenges().map((item, idx) => {\n            return <ChallengeComponent key={idx} challenge={item} />;\n          })\n        : null}\n      {/* {quiz? <ChallengeComponent challenge={quiz.getChallenges()[8]} />: null}\n      {quiz? <ChallengeComponent challenge={quiz.getChallenges()[9]} />: null} */}\n    </div>\n  );\n};\n\nexport default Practice;\n","import \"./css/index.css\";\nimport Homepage from \"./components/Homepage/Homepage\";\nimport Example from \"./components/Example/Example\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Practice from \"./components/Practice/Practice\";\n\nfunction App(): JSX.Element {\n  // return <Homepage />;\n  // return <Example/>\n\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={Homepage} />\n      <Route exact path=\"/example\" component={Example} />\n      <Route path=\"/practice/:encodedUrl\" component={Practice} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}