{"version":3,"sources":["components/Challenge/ChallengeComponent.tsx","components/Homepage/LinkedInAssessment.tsx","themeContext.tsx","components/common/Navbar/Navbar.tsx","components/Homepage/questionnaire.svg","components/Homepage/fileUpload.svg","components/Homepage/FileUploader.tsx","components/Homepage/Homepage.tsx","components/Challenge/MarkdownCustom.tsx","components/Example/Example.tsx","components/Practice/Practice.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChallengeStatus","AssessmentCard","props","title","assessmentInfo","replace","url","to","btoa","className","LinkedInAssessment","useState","assessmentInfos","setAssessmentInfo","filterBy","setFilterBy","useEffect","githubLinkedinSource","getAssessmentInfos","then","item","id","type","name","autoComplete","placeholder","onChange","e","target","value","handleSearchBarChange","filter","toLowerCase","includes","map","idx","defaultTheme","ThemeContext","React","createContext","theme","setTheme","str","console","log","ThemeProvider","children","window","localStorage","storedPrefs","getItem","matchMedia","matches","getInitialTheme","rawSetTheme","root","document","documentElement","isDark","classList","remove","add","setItem","Provider","Navbar","history","useHistory","useContext","onClick","push","FileUploader","htmlFor","src","FileUploaderIcon","alt","handleFileUpload","Homepage","urlSubmit","setUrlSubmit","handleMdUrlSubmit","alert","QuestionnaireLogo","onKeyPress","key","files","aria-label","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","components","code","inline","match","exec","style","dracula","language","PreTag","String","MarkdownCustom","content","ExplainCard","explain","expand","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","SingleChoice","challenge","status","selected","setSelected","choices","getChoices","getFieldClassname","IDLE","getAnswers","WRONG","Fragment","initialValues","onSubmit","values","onSelectedChange","parseInt","setValues","role","aria-labelledby","choice","idxString","checked","CORRECT","Question","displayQuestion","index","question","ChallengeComponent","setStatus","getExplanation","undefined","getQuestion","getIndex","Example","quiz","setQuiz","fetch","response","text","MdFileProcessor","getQuiz","getChallenges","Practice","encodedUrl","useParams","atob","practice","setPractice","length","Error","catch","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9ccf372.chunk.js","sourcesContent":["import { Challenge } from \"quiz-too\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport MarkdownCustom from \"./MarkdownCustom\";\nimport { Transition } from \"@tailwindui/react\";\n\ninterface challengeProps {\n  challenge: Challenge;\n}\n\nenum ChallengeStatus {\n  IDLE,\n  CORRECT,\n  WRONG,\n}\n\nconst ChallengeComponent = (props: challengeProps): JSX.Element => {\n  const { challenge } = props;\n  const [status, setStatus] = useState(ChallengeStatus.IDLE);\n  const [selected, setSelected] = useState<number[]>();\n  const explain = challenge.getExplanation();\n\n  useEffect(() => {\n    if (selected !== undefined && challenge.getAnswers().includes(selected[0])) {\n      setStatus(ChallengeStatus.CORRECT);\n    } else if (selected !== undefined) {\n      setStatus(ChallengeStatus.WRONG);\n    } else if (selected === undefined) {\n      setStatus(ChallengeStatus.IDLE);\n    }\n  }, [selected, challenge]);\n\n  return (\n    <div className=\"block p-2 text-xs mx-10 my-4 md:text-base border rounded-lg shadow dark:bg-gray-800\">\n      <Question question={challenge.getQuestion()} index={challenge.getIndex()} />\n      <SingleChoice challenge={challenge} status={status} onSelectedChange={(value) => setSelected(value)} />\n      {explain ? <ExplainCard explain={explain} expand={status !== ChallengeStatus.IDLE ? true : false} /> : null}\n      {/* <button className=\"mt-2 p-2\" onClick={()=>setSelected(undefined)}>REFRESH</button> */}\n    </div>\n  );\n};\n\nconst ExplainCard = (props: { explain: string; expand: boolean }) => {\n  const { explain, expand } = props;\n\n  const getClassname = () => {\n    if (expand) {\n      return \"block\";\n    } else {\n      return \"overflow-hidden hidden\";\n    }\n  };\n\n  return (\n    <Transition\n      show={expand}\n      enter=\"transition ease-out duration-500 transform\"\n      enterFrom=\"opacity-0 scale-95\"\n      enterTo=\"opacity-100 scale-100\"\n      leave=\"transition ease-in duration-75 transform\"\n      leaveFrom=\"opacity-100 scale-100\"\n      leaveTo=\"opacity-0 scale-95\"\n    >\n      <div className={`border-t-2 p-4 mt-4 select-text ${getClassname()}`}>\n        <p className=\"break-words text-gray-700 dark:text-gray-50 text-opacity-80\">{explain}</p>\n      </div>\n    </Transition>\n  );\n};\n\ninterface singleChoiceProps {\n  challenge: Challenge;\n  status: ChallengeStatus;\n  onSelectedChange: (selected: number[]) => void;\n}\n\nconst SingleChoice = (props: singleChoiceProps) => {\n  const { challenge, status } = props;\n  const [selected, setSelected] = useState<number>(-9);\n  const choices = challenge.getChoices();\n\n  // useEffect(()=>{\n  //     if(selected === undefined){\n  //         status = ChallengeStatus.IDLE;\n  //     }\n  // },[selected])\n\n  const getFieldClassname = (idx: number): string => {\n    if (status !== ChallengeStatus.IDLE && challenge.getAnswers().includes(idx)) {\n      return \"bg-gradient-to-r from-green-500 pointer-events-none\";\n    } else if (status === ChallengeStatus.WRONG && idx === selected) {\n      return \"bg-gradient-to-r from-red-500 pointer-events-none\";\n    } else if (status !== ChallengeStatus.IDLE) {\n      return \"pointer-events-none\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const getButtonClassname = () => {\n    if (status === ChallengeStatus.CORRECT) {\n      return \"bg-green-400 pointer-events-none\";\n    } else if (status === ChallengeStatus.WRONG) {\n      return \"bg-red-400 pointer-events-none\";\n    } else {\n      return \"bg-primary-400\";\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={{\n          selected: \"\",\n        }}\n        onSubmit={(values) => {\n          props.onSelectedChange([parseInt(values.selected)]);\n          setSelected(parseInt(values.selected));\n        }}\n      >\n        {({ values, setValues }) => (\n          <Form>\n            <div className=\"flex-col my-5\" role=\"group\" aria-labelledby=\"single-choices-group\">\n              {choices.map((choice, idx) => {\n                const idxString = String(idx);\n\n                return (\n                  <div className={`flex items-center p-2 rounded-l-lg ${getFieldClassname(idx)}`} key={idx}>\n                    <Field\n                      type=\"radio\"\n                      name=\"selected\"\n                      checked={idxString === values.selected ? true : false}\n                      value={idxString}\n                    />\n\n                    <span\n                      className=\"w-11/12 mx-2 overflow-x-auto text-gray-800 dark:text-gray-100\"\n                      onClick={() => {\n                        if (status === ChallengeStatus.IDLE) {\n                          setValues({ selected: String(idx) });\n                        }\n                      }}\n                    >\n                      <MarkdownCustom content={choice} />\n                    </span>\n                    {/* <Field component={RadioContent} valueName=\"selected\" value={String(idx)} content={choice} selected={values.selected}/> */}\n                  </div>\n                );\n              })}\n            </div>\n            <button\n              // className={`block p-2 font-bold uppercase transition duration-200 ease-in-out ${getButtonClassname()} text-gray-100 rounded-lg m-1 transform hover:-translate-y-1 hover:scale-110 hover:bg-primary-600 focus:outline-none`}\n              className={`block p-2 font-bold uppercase transition duration-200 ease-in-out ${getButtonClassname()} text-gray-100 rounded-lg m-1 transform xl:hover:-translate-y-1 xl:hover:scale-110 xl:hover:bg-primary-600 focus:outline-none`}\n              type=\"submit\"\n            >\n              Check\n            </button>\n          </Form>\n        )}\n      </Formik>\n      {/* <button onClick={()=>setSelected(undefined)}>REFRESH</button> */}\n    </React.Fragment>\n  );\n};\n\n// interface radioContentProps {\n//     valueName:string,\n//     value:string,\n//     content:string\n//     selected:string\n// }\n\n// const RadioContent = (props:radioContentProps) => {\n\n//     const {valueName, value, content, selected} = props;\n\n//     const [field, , helpers] = useField({ name: valueName, type: \"radio\", value: value });\n\n//     const { setValue } = helpers;\n\n//     return (\n//         <React.Fragment>\n//             <input {...field} checked={value === selected} type=\"radio\"></input>\n//             <span className=\"ml-3 w-full\" onClick={()=>{setValue(value)}}><MarkdownCustom content={content}/></span>\n//         </React.Fragment>\n//     );\n// };\n\nconst Question = (props: { question: string; index: number }) => {\n  const displayQuestion = \"Q\" + props.index + \". \" + props.question;\n\n  return (\n    <div className=\"border-primary-400 border-b-2 p-2 pb-4 overflow-x-auto\">\n      <MarkdownCustom content={displayQuestion} />\n    </div>\n  );\n};\n\nexport default ChallengeComponent;\n","import React, { useEffect, useState } from \"react\";\nimport { githubLinkedinSource } from \"quiz-too\";\nimport { Link } from \"react-router-dom\";\n\ninterface AssessmentInfo {\n  title: string;\n  url: string;\n  questionCount: number;\n}\n\nconst LinkedInAssessment = (props: { className?: string }): JSX.Element => {\n  const [assessmentInfos, setAssessmentInfo] = useState<AssessmentInfo[]>();\n  const [filterBy, setFilterBy] = useState<string>();\n\n  useEffect(() => {\n    githubLinkedinSource.getAssessmentInfos().then((item) => {\n      setAssessmentInfo(item);\n    });\n  }, []);\n\n  const handleSearchBarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterBy(e.target.value);\n  };\n\n  const getDisplayAssessment = () => {\n    return assessmentInfos?.filter((item) => item.title.toLowerCase().includes(filterBy || \"\"));\n  };\n\n  return (\n    <div className={`flex flex-col justify-center ${props.className}`}>\n      <div\n        id=\"searchbar-for-linkedin\"\n        className=\"w-full h-10 pl-3 pr-2 bg-gray-50 dark:bg-gray-800 border-2 rounded-full flex justify-between items-center relative\"\n      >\n        <input\n          type=\"search\"\n          name=\"filter-assessment\"\n          id=\"filter-assessment\"\n          autoComplete=\"off\"\n          placeholder=\"Filter LinkedIn Assessment\"\n          className=\"bg-gray-50 dark:bg-gray-800 w-full outline-none focus:outline-none active:outline-none\"\n          onChange={(e) => handleSearchBarChange(e)}\n        />\n      </div>\n\n      <div id=\"linkedin-assessment-lists\" className=\"mt-4\">\n        {getDisplayAssessment()?.map((item, idx) => {\n          return <AssessmentCard key={idx} assessmentInfo={item} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst AssessmentCard = (props: { assessmentInfo: AssessmentInfo }): JSX.Element => {\n  const title = props.assessmentInfo.title.replace(/\\[|\\]/g, \"\");\n  const url = props.assessmentInfo.url;\n\n  // const handleClickCard = () => {\n  //   console.log(url);\n  //   hashHistory\n  // }\n\n  return (\n    <Link to={`/practice/${btoa(url)}`}>\n      <div className=\"p-2 m-1 bg-secondary-500 dark:bg-gray-800 font-bold text-gray-100 rounded-sm shadow text-sm flex justify-between\">\n        <span>{title}</span>\n        {/* <span className=\"text-gray-300\">{questionCount}</span> */}\n      </div>\n    </Link>\n  );\n};\nexport default LinkedInAssessment;\n","// themeContext.js\n\nimport React from \"react\";\n\nconst defaultTheme = \"light\";\n\ninterface Props {\n  //   initialTheme: string;\n  children: React.ReactNode;\n}\n\nconst getInitialTheme = () => {\n  if (typeof window !== \"undefined\" && window.localStorage) {\n    const storedPrefs = window.localStorage.getItem(\"color-theme\");\n    if (typeof storedPrefs === \"string\") {\n      return storedPrefs;\n    }\n\n    const userMedia = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    if (userMedia.matches) {\n      return \"dark\";\n    }\n  }\n\n  // If you want to use light theme as the default, return \"light\" instead\n  return defaultTheme;\n};\n\nexport const ThemeContext = React.createContext({\n  theme: defaultTheme,\n  setTheme: (str: string) => console.log(`setTheme function is null. ${str}`),\n});\n\nexport const ThemeProvider = ({ children }: Props): JSX.Element => {\n  const [theme, setTheme] = React.useState(getInitialTheme());\n\n  const rawSetTheme = (theme: string) => {\n    const root = window.document.documentElement;\n    const isDark = theme === \"dark\";\n\n    root.classList.remove(isDark ? \"light\" : \"dark\");\n    root.classList.add(theme);\n\n    localStorage.setItem(\"color-theme\", theme);\n  };\n\n  if (theme) {\n    rawSetTheme(theme);\n  }\n\n  React.useEffect(() => {\n    rawSetTheme(theme);\n  }, [theme]);\n\n  return <ThemeContext.Provider value={{ theme, setTheme }}>{children}</ThemeContext.Provider>;\n};\n","import { useHistory } from \"react-router\";\nimport { ThemeContext } from \"../../../themeContext\";\nimport { useContext } from \"react\";\n\nconst Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  return (\n    <div className=\"z-50 flex justify-between md:px-10 bg-gray-100 dark:bg-gray-900\">\n      <button className=\"m-2 p-2 text-lg uppercase font-bold focus:outline-none\" onClick={() => history.push(\"/\")}>\n        <span className=\"text-primary-500\">MD2</span>Practice\n      </button>\n      <div className=\"m-2 my-4\">\n        <button\n          className=\"p-2 text-md bold border-4 rounded-lg capitalize border-gray-700 dark:border-gray-100 focus:outline-none\"\n          onClick={toggleTheme}\n        >{`${theme === \"dark\" ? \"light\" : \"dark\"} Theme`}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/questionnaire.da1f0384.svg\";","export default __webpack_public_path__ + \"static/media/fileUpload.1668c3de.svg\";","import FileUploaderIcon from \"./fileUpload.svg\";\n\ninterface Props {\n  handleFileUpload: React.ChangeEventHandler<HTMLInputElement>;\n}\n\nconst FileUploader = (props: Props): JSX.Element => {\n  return (\n    <span>\n      <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n        <img src={FileUploaderIcon} alt=\"fileUploaderIcon\" />\n      </label>\n      <input className=\"hidden\" id=\"file-upload\" type=\"file\" name=\"file-upload\" onChange={props.handleFileUpload} />\n    </span>\n  );\n};\n\nexport default FileUploader;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport LinkedInAssessment from \"./LinkedInAssessment\";\nimport Navbar from \"../common/Navbar/Navbar\";\nimport QuestionnaireLogo from \"./questionnaire.svg\";\nimport FileUploader from \"./FileUploader\";\n\nconst Homepage = (): JSX.Element => {\n  const history = useHistory();\n  const [urlSubmit, setUrlSubmit] = useState<string>();\n\n  const handleMdUrlSubmit = () => {\n    if (urlSubmit) {\n      history.push(`/practice/${btoa(urlSubmit || \"\")}`);\n    } else {\n      alert(\"Key in URL\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      {/* <div className=\"flex justify-between md:px-10\">\n        <button className=\"m-2 p-2 text-lg uppercase font-bold focus:outline-none\">\n          <span className=\"text-primary-500\">MD2</span>Practice\n        </button>\n        <div className=\"m-2 p-2 text-md\">\n          <button></button> Dark Theme\n        </div>\n      </div> */}\n\n      <section className=\"mt-10\">\n        <div className=\"flex justify-around px-10\">\n          <div className=\"flex flex-col w-1/2 justify-center justify-items-center text-center\">\n            <span className=\"text-md md:text-4xl lg:text-8xlmd:text-lg font-bold\">Simple Practice Test Engine</span>\n            <span className=\"text-xs md:text-2xl lg:text-6xlmd:text-lg fond-semibold text-gray-400\">\n              Convert MD File to Q&amp;A for Practice\n            </span>\n          </div>\n          <div className=\"flex justify-center justify-items-center text-center\">\n            <img className=\"w-full h-full\" src={QuestionnaireLogo} alt=\"questionnaire-logo\" />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"md:w-2/3 md:m-auto\">\n        <div className=\"flex flex-col mx-10 my-20 justify-center justify-items-center\">\n          <div className=\"w-full h-10 pl-3 pr-2 bg-gray-50 dark:bg-gray-800 border-2 rounded-full flex justify-between items-center relative\">\n            <input\n              onChange={(e) => setUrlSubmit(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  handleMdUrlSubmit();\n                }\n              }}\n              type=\"search\"\n              name=\"md-url\"\n              autoComplete=\"off\"\n              id=\"md-url-submit\"\n              placeholder=\"URL for MD File\"\n              className=\"bg-gray-50 dark:bg-gray-800 w-full outline-none focus:outline-none active:outline-none\"\n            />\n            <FileUploader\n              handleFileUpload={(e) => {\n                if (e.target.files) {\n                  console.log(e.target);\n                }\n              }}\n            />\n            <button\n              onClick={handleMdUrlSubmit}\n              type=\"submit\"\n              aria-label=\"url-button\"\n              className=\"ml-1 outline-none focus:outline-none active:outline-none\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          <div className=\"text-lg uppercase text-center my-2\">OR</div>\n          <div className=\"border border-b-2 shadow-md border-primary-700\"></div>\n          <div className=\"mt-4 font-bold flex justify-center\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"animate-bounce mr-2 h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            <span>LinkedIn Assessment Practice</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"animate-bounce ml-2 h-5 w-5\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M15.707 4.293a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 011.414 0zm0 6a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-5-5a1 1 0 111.414-1.414L10 14.586l4.293-4.293a1 1 0 011.414 0z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <LinkedInAssessment className=\"mt-4\" />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n/* Use `…/dist/cjs/…` if you’re not in ESM! */\nimport { dracula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst components = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  code({ inline, className, children, ...props }: any) {\n    const match = /language-(\\w+)/.exec(className || \"\");\n    return !inline && match ? (\n      <SyntaxHighlighter\n        className={`${className} pointer-events-auto`}\n        style={dracula}\n        language={match[1]}\n        PreTag=\"div\"\n        children={String(children).replace(/\\n$/, \"\")}\n        {...props}\n      />\n    ) : (\n      <code className={`${className}`} children={children} {...props} />\n    );\n  },\n};\n\ninterface Props {\n  content: string;\n}\n\nconst MarkdownCustom = (props: Props): JSX.Element => {\n  return <ReactMarkdown components={components} children={props.content} />;\n};\n\nexport default MarkdownCustom;\n","import { MdFileProcessor, Quiz } from \"quiz-too\";\nimport { useEffect, useState } from \"react\";\nimport ChallengeComponent from \"../Challenge/ChallengeComponent\";\n\nconst Example = (): JSX.Element => {\n  const [quiz, setQuiz] = useState<Quiz>();\n\n  useEffect(() => {\n    fetch(\"https://raw.githubusercontent.com/Ebazhanov/linkedin-skill-assessments-quizzes/master/css/css-quiz.md\")\n      .then((response) => response.text())\n      .then((content) => {\n        const mdFileProcessor = new MdFileProcessor(content);\n        const quiz = mdFileProcessor.getQuiz();\n        console.log(quiz);\n        setQuiz(quiz);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex-col justify-items-center pt-10 font-mono select-none bg-gray-100 dark:bg-gray-900 dark:text-gray-100\">\n      {quiz\n        ? quiz.getChallenges().map((item, idx) => {\n            return <ChallengeComponent key={idx} challenge={item} />;\n          })\n        : null}\n      {/* {quiz? <ChallengeComponent challenge={quiz.getChallenges()[8]} />: null}\n      {quiz? <ChallengeComponent challenge={quiz.getChallenges()[9]} />: null} */}\n    </div>\n  );\n};\n\nexport default Example;\n","import { MdFileProcessor, Quiz } from \"quiz-too\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport ChallengeComponent from \"../Challenge/ChallengeComponent\";\nimport Navbar from \"../common/Navbar/Navbar\";\n\nconst Practice = (): JSX.Element => {\n  const history = useHistory();\n  const { encodedUrl } = useParams<{ encodedUrl: string }>();\n\n  const url = atob(encodedUrl);\n  const [practice, setPractice] = useState<Quiz>();\n\n  useEffect(() => {\n    console.log(encodedUrl);\n    if (!url) {\n      history.push(\"/\");\n    }\n\n    fetch(url)\n      .then((response) => response.text())\n      .then((content) => {\n        const mdFileProcessor = new MdFileProcessor(content);\n        const practice = mdFileProcessor.getQuiz();\n        if (practice.getChallenges().length === 0) {\n          throw Error(\"No Challenge Detected.\");\n        }\n        setPractice(practice);\n      })\n      .catch(() => {\n        alert(\"fail to load practice.\");\n        history.push(\"/\");\n      });\n  }, []);\n\n  return (\n    <div className=\"dark:text-gray-100\">\n      <Navbar />\n      <div className=\"flex-col justify-items-center pt-2 select-none\">\n        {practice\n          ? practice.getChallenges().map((item, idx) => {\n              return <ChallengeComponent key={idx} challenge={item} />;\n            })\n          : null}\n        {/* {quiz? <ChallengeComponent challenge={quiz.getChallenges()[8]} />: null}\n          {quiz? <ChallengeComponent challenge={quiz.getChallenges()[9]} />: null} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Practice;\n","import \"./css/index.css\";\nimport Homepage from \"./components/Homepage/Homepage\";\nimport Example from \"./components/Example/Example\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Practice from \"./components/Practice/Practice\";\nimport { ThemeProvider } from \"./themeContext\";\n\nfunction App(): JSX.Element {\n  // return <Homepage />;\n  // return <Example/>\n\n  return (\n    <ThemeProvider>\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/example\" component={Example} />\n        <Route exact path=\"/practice/:encodedUrl\" component={Practice} />\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}